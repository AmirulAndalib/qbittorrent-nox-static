---
const { id, label } = Astro.props;
const buttonId = id + "-open";
const buttonClose = id + "-close";
const posts = await Astro.glob("/src/content/docs/glossary/*.md");
const regex = new RegExp(`${id}\.md$|${id}\.mdx$`);
const filtered = posts.find((post) => post.file.match(regex));
const htmlSplit = filtered?.compiledContent()?.toString()?.split("<hr>") || [];
const basePath = "/" + Astro.url.pathname.split("/")[1] + "/";
const glossaryUrl = basePath + "glossary/" + id;
---

<my-modal
	tabindex="0"
	data-tippy-maxWidth="100"
	data-id={id + "-dialog"}
	data-button-id={buttonId}
	data-button-close={buttonClose}
	data-html={htmlSplit[0] +
		'<hr class="tooltippy-line"><div class="tooltippy-div">ðŸŸ© <a class="tooltippy-link" href=' +
		glossaryUrl +
		' target="_blank">Click here for the full Glossary entry</a></div>'}
>
	<a class="tooltippy-link" id={buttonId}>{label}</a>
</my-modal>

<script>
	class MyModal extends HTMLElement {
		constructor() {
			super();
			const id = this.dataset.id || "";
			const buttonId = this.dataset.buttonId || "";
			const buttonClose = this.dataset.buttonClose || "";
			const html = this.dataset.html || "";

			const body = document.querySelector("body");
			if (!body) {
				return;
			}

			body.insertAdjacentHTML(
				"beforeend",
				`<dialog class="toolTipDialog" id="${id}">` +
					`<div class="dialog-content" id="${id}-content"></div>` +
					`<div class="dialog-button">` +
					`<button class="dialog-button-close" id="${buttonClose}" type="reset">Close this Dialog</button>` +
					`</div>` +
					`</dialog>`
			);

			const dialogDiv = document.getElementById(`${id}-content`);
			if (dialogDiv) {
				dialogDiv.innerHTML = html;
			}

			const openDialog = document.getElementById(buttonId);
			const closeDialog = document.getElementById(buttonClose);
			const dialog = document.getElementById(id);

			if (!openDialog || !closeDialog || !dialog) {
				return;
			}

			// Update button opens a modal dialog
			openDialog.addEventListener("click", () => {
				(dialog as HTMLDialogElement).showModal();
			});

			// Form cancel button closes the dialog box
			closeDialog.addEventListener("click", () => {
				(dialog as HTMLDialogElement).close();
			});

			// Close the dialog when clicked outside
			window.addEventListener("click", (event) => {
				if (event.target === dialog) {
					(dialog as HTMLDialogElement).close();
				}
			});
		}
	}
	customElements.define("my-modal", MyModal);
</script>
